
[[[],'introscript\intro.sqf'],'BIS_fnc_execVM',true]  call BIS_fnc_MP;









Example for scripted function:
// <params> spawn fnc_someScriptedFunction;
<params> remoteExec ["fnc_someScriptedFunction", targets, JIP];




Examples for script commands of every kind:
// someScriptCommand;
[] remoteExec ["someScriptCommand", targets, JIP];

// someScriptCommand <params>;
[<params>] remoteExec ["someScriptCommand", targets, JIP];

// <params1> someScriptCommand <params2>;
[<params1>, <params2>] remoteExec ["someScriptCommand", targets, JIP];

Number - Only 0 and 2 are special. When 0, the function or command will be executed globally, i.e. on the server and every connected client, including the one where remoteExec was originated. When 2, it will be executed only on the server. When 3, 4, 5...etc it will be executed on the client where clientOwner ID matches the given number. When number is negative, the effect is inverted. -2 means execute on every client but not the server. -12, for example, means execute on the server and every client, but not on the client where clientOwner ID is equal to 12.

JIP (Optional):

    String or Boolean - If true, function generates a unique ID for the message and the message itself is added to the JIP queue and executed for every JIP. If a non-empty string is given, it is treated a custom ID of the message and the message itself is added to the JIP queue overriding any remoteExecCall message with the same ID. Otherwise, no ID is generated and no message is placed into the JIP queue. [default: false] (see also Example 7 on how to remove previously set function from JIP queue)

    Object or Group or netId - The persistent execution of the given remoteExec statement will be attached to the given Object or Group, passed directly by reference or by their netId: _netId = "this is my car" remoteExec ["hint", 0, car]; or _netId = "this is my car" remoteExec ["hint", 0, netId car];Upon success, the command will return netId of the used Object or Group or netId. When Object or Group is deleted and becomes objNull or grpNull, the persistent remoteExec statement is automatically removed from JIP queue. Manual removal of the JIP statement could be done by passing either Object, Group or netId as usual:remoteExec ["", car]; or remoteExec ["", netId car];When JIP param is String in format "Number:Number", the string will be tested first whether or not it is the valid netId of an existing Object or Group, and if not the execution will be aborted, if yes, that Object or Group will be used to set persistent execution.